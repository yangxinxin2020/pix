
Public Sub Led_SizeChange(pobjLead As LEAD, plngMode As Long, Optional pblnSpin As Boolean = True)
    '''エラートラップ
    On Error Resume Next
    '''開始ログ
    Output.Log App.EXEName, "frmMain", "Led_Spin", eLg08MethodStart, "イメージ回転"
    
    Dim LedWidth            As Long
    Dim LedHeight           As Long

'##    Dim objTmp              As Object
    Dim varTmp              As Variant

    
    With pobjLead

'##        Set objTmp = CallBack_.ExProcessInfo.KeyObj("ExTImportFile", "Size", CStr(ImportMode))
'##        If objTmp Is Nothing Then
'##            .Width = ImageWidth
'##            .Height = ImageHeight
'##        Else
'##            .Width = objTmp.Value
'##            .Height = objTmp.Value2
'##        End If
        '通常画像サイズ設定
        .ScaleMode = 3

        If ImportMode = 2 Then
            
            'ここでは何も処理を行わず、後述のマスタがない時の対応で、縦形式か横形式か判定し、サイズを設定する。
            
        Else
            varTmp = Master.Com_ProcessInfo2("ExTImportFile", "Size", CStr(ImportMode), ePiValue10)
        End If

#Else '-----------------------------------------------------------------
        varTmp = Master.Com_ProcessInfo2("ExTImportFile", "Size", CStr(ImportMode), ePiValue10)


'##        If objTmp Is Nothing Then
'##            If ImportMode = 0 Then
'##                .Width = 240
'##                .Height = 320
'##            Else
'##                .Width = 320
'##                .Height = 240
'##            End If
'##        Else
'##            .Width = objTmp.Value
'##            .Height = objTmp.Value2
'##        End If

'##
        

            If ImportMode = 0 Then
                .Width = 240
                .Height = 320

            ElseIf ImportMode = 2 Then
            
                .Height = .BitmapHeight
                .Width = .BitmapWidth
            
            Else
'               写真が縦形式か横形式が判断する
                If .BitmapHeight >= .BitmapWidth Then   '縦長の画像の時
                    .Height = 320
                    .Width = 240
                Else                                    '横長の画像の時
                    .Width = 320
                    .Height = 240
                End If
            End If
        Else
       End If
            
            Dim SetNum()   As String
            
            SetNum = Split(frmMain.CMB_Resolution.Text, "×")
            If pblnSpin Then
                If .BitmapHeight >= .BitmapWidth Then   '縦長の画像の時
                    .Width = SetNum(0)
                    .Height = SetNum(1)
                Else    '横長の時
                    .Height = SetNum(0)
                    .Width = SetNum(1)
                End If
            Else
                If .BitmapHeight >= .BitmapWidth Then   '縦長の画像の時
                    .Height = SetNum(0)
                    .Width = SetNum(1)
                Else    '横長の時
                    .Width = SetNum(0)
                    .Height = SetNum(1)
                End If
            End If

        End If

        LedWidth = .Width
        LedHeight = .Height
        If Not .HasRgn Then
            .Rotate (100 * plngMode), True, vbWhite
            If pblnSpin = True And IsArray(varTmp) = False Then
                .Left = .Left + ((LedWidth / 2) - (LedHeight / 2))
                .Width = LedHeight
                .Height = LedWidth
            End If
            Call frmMain.ViewFit(pobjLead)
            .ForceRepaint
        End If

'##        Set objTmp = Nothing
        varTmp = Empty

    End With
    
    '''終了ログ
    Output.Log App.EXEName, "frmMain", "Led_Spin", eLg09MethodEnd, "イメージ回転"

End Sub


Public Sub ViewFit(w_ObjLed As LEAD, Optional intFlg As Integer)

    '''エラートラップ
    On Error GoTo ViewFit_Err
    '''開始ログ
    Output.Log App.EXEName, "frmMain", "ViewFit", eLg08MethodStart, "イメージ幅変更"
    
    'アスペクト比保存用の変数を宣言します。
    Dim HeightFactor As Long
    Dim WidthFactor As Long
    Dim HeightAllowed As Long
    Dim WidthAllowed As Long

    With w_ObjLed
        If intFlg <> 1 Then
            '読み込んだ画像に対する変更を無効にします。
            .AutoSetRects = False
            .BackErase = False
        End If
        
        'アスペクト比変数を設定します(フォームの1/8 サイズ)。
        .ScaleMode = 1
        HeightFactor = .BitmapHeight
        WidthFactor = .BitmapWidth
        HeightAllowed = .ScaleHeight
        WidthAllowed = .ScaleWidth
    
        'アスペクト比をもとに、LEADコントロールをフォームの中央に配置します。
        'ビットマップの最大幅を利用すると画像の高さが高くなりすぎるので注意します。
        '結果をもとにコントロールの大きさを設定します。
        
        If (WidthAllowed / WidthFactor) <= (HeightAllowed / HeightFactor) Then
            WidthAllowed = WidthFactor * (WidthAllowed / WidthFactor)
            HeightAllowed = HeightFactor * (WidthAllowed / WidthFactor)
        Else
            WidthAllowed = WidthFactor * (HeightAllowed / HeightFactor)
            HeightAllowed = HeightFactor * (HeightAllowed / HeightFactor)
        End If
        If intFlg <> 1 Then
             'LEADコントロールの大きさに合うよう、画像の表示サイズを設定します。
            .SetSrcRect 0, 0, WidthFactor - 30, HeightFactor - 30
            .SetDstRect 0, 0, WidthAllowed - 30, HeightAllowed - 30
            .SetDstClipRect 0, 0, WidthAllowed - 30, HeightAllowed - 30
        Else
            'サイズを設定
            .Size WidthAllowed - 30, HeightAllowed - 30, RESIZE_NORMAL
            '設定されたサイズにリサイズ
            .PaintSizeMode = PAINTSIZEMODE_NORMAL
        End If
        
        '読み込んだ画像に対する変更を有効にする。
        .AutoSetRects = True
        .ForceRepaint
    End With

    '''終了ログ
    Output.Log App.EXEName, "frmMain", "ViewFit", eLg09MethodEnd, "イメージ幅変更"

Exit Sub
ViewFit_Err:
    
    Output.Log App.EXEName, "frmMain", "ViewFit", eLg06Information, "イメージ幅変更"

End Sub



